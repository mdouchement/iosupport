// Automatically generated by MockGen. DO NOT EDIT!
// Source: storage_service.go

package iosupport_test

import (
	gomock "github.com/golang/mock/gomock"
)

// Mock of StorageService interface
type MockStorageService struct {
	ctrl     *gomock.Controller
	recorder *_MockStorageServiceRecorder
}

// Recorder for MockStorageService (not exported)
type _MockStorageServiceRecorder struct {
	mock *MockStorageService
}

func NewMockStorageService(ctrl *gomock.Controller) *MockStorageService {
	mock := &MockStorageService{ctrl: ctrl}
	mock.recorder = &_MockStorageServiceRecorder{mock}
	return mock
}

func (_m *MockStorageService) EXPECT() *_MockStorageServiceRecorder {
	return _m.recorder
}

func (_m *MockStorageService) Marshal(key string, v interface{}) error {
	ret := _m.ctrl.Call(_m, "Marshal", key, v)
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockStorageServiceRecorder) Marshal(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Marshal", arg0, arg1)
}

func (_m *MockStorageService) Unmarshal(key string, v interface{}) error {
	ret := _m.ctrl.Call(_m, "Unmarshal", key, v)
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockStorageServiceRecorder) Unmarshal(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Unmarshal", arg0, arg1)
}

func (_m *MockStorageService) EraseAll() error {
	ret := _m.ctrl.Call(_m, "EraseAll")
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockStorageServiceRecorder) EraseAll() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "EraseAll")
}
